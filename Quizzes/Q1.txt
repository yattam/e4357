BEGIN
--------------------------------------------------------------------
Q1: Is there any compile error with the following code (if any)?

	unsigned int Arr[16];
	3[Arr] = 7; 
 
Explain:
There is no compile error, Arr[3], is the same as 3[Arr]. Since it is a postfix operation

--------------------------------------------------------------------
Q2: What is the difference between the following 3 statements? 

const int * px; 
int const * px; 
int * const px; 

Is there any compile error for the following cases?
case1: 
int x = 13; 
const int * px; 
px = & x; 
No 

case 2: 
int x = 13; 
int const * px; 
px = & x; 
No 

case 3: 
int x = 13; 
int * const px;
px = & x; 
Yes

Explain:
- No compile error for case 1 and 2 since the data is constant not the pointer. 
- compile error since the pointer is constant and can not be updated

--------------------------------------------------------------------
Q3: Write a function to set or clear ith bit of a 32-bit register. 
	Where ith (0-based) := {0, 1, 2, …, 31 } 
	
void reg_set(volatile unsigned int * pReg, int ith) 
{ 
*Reg |= 1 << ith;
} 

void reg_clear(volatile unsigned int * pReg, int ith) 
{ 
*Reg&= ~(1<<ith);
} 

--------------------------------------------------------------------
Q4: Write a swap function in C.
void swap(unsigned int * px, unsigned int *py) 
{ 
*px ^=*py;
*py ^=*px;
*px ^=*py;
} 

--------------------------------------------------------------------
Q5:	What is the output of the following code? (Given: sizeof(unsigned int) is 4) Page 34 

unsigned int Arr[16]; 
unsigned int a0 = (unsigned int) &Arr[0]; 
unsigned int a3 = (unsigned int) &Arr[3]; 
printf(“%d\n”, a3 – a0); 

12







END
